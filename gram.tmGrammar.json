{
  "scopeName": "source.gram",
  "fileTypes": [
    "gram"
  ],
  "name": "Gram",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#path-patterns"
		},
		{
			"include": "#path-compositions"
		}
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "//.*$\\n?",
          "name": "comment.line.double-slash.gram"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "(?i)\\b(TRUE|FALSE)\\b",
          "name": "constants.language.bool.gram"
      },
        {
          "match": "(?i)\\b(NULL)\\b",
          "name": "constants.language.missing.gram"
        }
      ]
    },
    "path-patterns": {
      "patterns": [
        {
          "match": "(<--|-->|--|<==|==>|==)",
          "name": "support.function.relationship-pattern.gram"
				},
				{
          "name": "node-pattern.gram",
          "begin": "(\\()",
          "beginCaptures": {
            "1": {
              "name": "support.function.node-pattern-start.gram"
            }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "keyword.operator.node-pattern-end.gram"
            }
          },
          "patterns": [
            {
              "include": "#identifiers"
            },
            {
              "name": "entity.name.class.node-label.gram",
              "match": "(:)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "captures": {
                "1": {
                  "name": "keyword.operator.node-label-start.gram"
                },
                "2": {
                  "name": "entity.name.class.node.label.gram"
                }
              }
            },
            {
              "captures": {
                "1": {
                  "name": "support.type.operator.node-label-or.gram"
                },
                "2": {
                  "name": "entity.name.class.node.label-or.gram"
                }
              },
              "match": "(:)(\\s*)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "name": "entity.name.class.node-label-ored.gram"
            },
            {
              "include": "#properties_literal"
          	}
					]
				},
        {
          "name": "relationship-pattern.gram",
          "begin": "(<-|-)(\\[)",
          "beginCaptures": {
            "1": {
              "name": "support.function.relationship-pattern-start.gram"
            },
            "2": {
              "name": "keyword.operator.relationship-pattern-start.gram"
            }
          },
          "end": "(])(->|-)",
          "endCaptures": {
            "1": {
              "name": "keyword.operator.relationship-pattern-end.gram"
            },
            "2": {
              "name": "support.function.relationship-pattern-end.gram"
            }
          },
          "patterns": [
            {
              "include": "#identifiers"
            },
            {
              "captures": {
                "1": {
                  "name": "keyword.operator.relationship-type-start.gram"
                },
                "2": {
                  "name": "entity.name.class.relationship.type.gram"
                }
              },
              "match": "(:)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "name": "entity.name.class.relationship-type.gram"
            },
            {
              "captures": {
                "1": {
                  "name": "support.type.operator.relationship-type-or.gram"
                },
                "2": {
                  "name": "entity.name.class.relationship.type-or.gram"
                }
              },
              "match": "(:)(\\s*)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "name": "entity.name.class.relationship-type-ored.gram"
            },
            {
              "include": "#properties_literal"
          	}
          ]
	      }
      ]
		},
		"path-compositions": {
      "patterns": [
        {
          "name": "composition-pattern.gram",
          "begin": "(\\[)",
          "beginCaptures": {
            "1": {
              "name": "support.function.relationship-pattern-start.gram"
            }
          },
          "end": "(])",
          "endCaptures": {
            "1": {
              "name": "keyword.operator.relationship-pattern-end.gram"
            }
          },
          "patterns": [
            {
              "include": "#identifiers"
            },
            {
              "captures": {
                "1": {
                  "name": "keyword.operator.relationship-type-start.gram"
                },
                "2": {
                  "name": "entity.name.class.relationship.type.gram"
                }
              },
              "match": "(:)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "name": "entity.name.class.relationship-type.gram"
            },
            {
              "captures": {
                "1": {
                  "name": "support.type.operator.relationship-type-or.gram"
                },
                "2": {
                  "name": "entity.name.class.relationship.type-or.gram"
                }
              },
              "match": "(:)(\\s*)((?:`.+?`)|(?:[a-zA-Z_][a-zA-Z0-9_]*))",
              "name": "entity.name.class.relationship-type-ored.gram"
            },
            {
              "include": "#properties_literal"
          	}
          ]
	      }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "match": "`.+?`",
          "name": "variable.other.quoted-identifier.gram"
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.identifier.gram"
        }
      ]
    },
    "properties_literal": {
      "patterns": [
        {
          "begin": "{",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.properties_literal.gram"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "keyword.control.properties_literal.gram"
            }
          },
          "name": "source.gram",
          "patterns": [
            {
              "match": ":,",
              "name": "keyword.control.properties_literal.seperator.gram"
            },
            {
              "include": "#comments"
            },
            {
              "include": "#constants"
            },
            {
              "include": "#operators"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#strings"
            },
            {
              "include": "#identifiers"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b\\d+(\\.\\d+)?([a-zA-Z]*)\\b",
          "name": "constant.numeric.gram"
        }
      ]
    },
    "string_escape": {
      "captures": {
        "2": {
          "name": "string.quoted.double.gram"
        }
      },
      "match": "(\\\\\\\\|\\\\[tbnrf])|(\\\\'|\\\\\"|\\`)",
      "name": "constant.character.escape.gram"
    },
    "strings": {
      "patterns": [
        {
          "begin": "'",
          "end": "'",
          "name": "string.quoted.single.gram",
          "patterns": [
            {
              "include": "#string_escape"
            }
          ]
        },
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.gram",
          "patterns": [
            {
              "include": "#string_escape"
            }
          ]
        },
        {
          "begin": "`",
          "end": "`",
          "name": "string.quoted.single.tick.gram",
          "patterns": [
            {
              "include": "#string_escape"
            }
          ]
        }
      ]
    }
  }
}